<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>View Increaser</title>
        <style>
            /* Global styles and background */
            body {
                width: 100%;
                height: 100vh;
                display: flex;
                justify-content: center;
                align-items: center;
                text-align: center;
                font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
                background-image: linear-gradient(
                    to top,
                    #d5d4d0 0%,
                    #d5d4d0 1%,
                    #eeeeec 31%,
                    #efeeec 75%,
                    #e9e9e7 100%
                );
                color: #000000;
                margin: 0;
            }

            .container {
                backdrop-filter: blur(10px);
                border-radius: 15px;
                padding: 30px;
                max-width: 500px;
                width: 100%;
                margin-left: auto;
                margin-right: auto;
            }
            h1 {
                font-size: 48px;
                margin-bottom: 10px;
                line-height: 60px;
                font-weight: 700;
                font-style: normal;
            }

            p {
                font-size: 1.1rem;
                margin-bottom: 20px;
            }
            .header {
                margin-bottom: 3rem;
            }
            .header p {
                color: #555;
            }

            form {
                margin: 3rem 0;
            }
            input[type="text"] {
                width: 80%;
                padding: 12px;
                border-radius: 5px;
                border: none;
                margin-bottom: 20px;
                font-size: 1rem;
                border: 1px solid #d5d5d5;
                transition: border 0.3s ease;
            }

            input[type="text"]:hover,
            :focus {
                border: 1px solid #d5d5d5;
                outline: none;
            }

            button {
                padding: 12px 25px;
                border: none;
                border-radius: 25px;
                background-color: #222;
                color: white;
                font-size: 1rem;
                cursor: pointer;
                transition: background-color 0.3s ease;
                margin-top: 1rem;
                font-weight: 200;
            }

            button:hover {
                background-color: #222;
            }

            ul {
                list-style-type: none;
                padding: 0;
            }

            ul li {
                margin-bottom: 10px;
                font-size: 1rem;
            }

            /* Countdown and hit count styles */
            .countdown {
                font-size: 2rem;
                font-weight: bold;
                color: #ff7675;
            }

            .hit-info {
                font-size: 1.5rem;
                font-weight: bold;
                color: #32e0c4;
            }

            /* Styling for headings */
            h2 {
                margin-top: 20px;
                font-size: 1.5rem;
                color: #222;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Views Increaser</h1>
                <p>Enter a URL to increase views every 10 seconds:</p>
            </div>

            <form action="/add-url" method="POST" id="url-form">
                <input
                    type="text"
                    id="url-input"
                    name="url"
                    placeholder="Enter URL"
                    required
                />
                <br />
                <button type="submit" id="toggle-button">Start Increase</button>
            </form>

            <ul id="url-list">
                <% urls.forEach((item) => { %>
                <li>
                    <strong>URL:</strong> <%= item.url %>
                    <br />
                    <strong>Views:</strong> <%= item.views %> hits
                </li>
                <% }) %>
            </ul>

            <div class="show">
                <h2>Next URL Hit:</h2>
                <p>
                    <strong>Time until next hit:</strong>
                    <span id="countdown" class="countdown">10</span> seconds
                </p>
                <p>
                    <strong>Hit Count:</strong>
                    <span id="hit-count" class="hit-info">0</span>
                </p>
            </div>
        </div>

        <script>
            let currentUrl = null;
            let hitCount = 0;
            let countdownTime = 10;
            let countdownInterval = null;
            let isIncreasing = false; // To track whether the view increaser is active

            // Function to update countdown timer in real time
            function startCountdown(url) {
                clearInterval(countdownInterval); // Clear any previous countdown
                countdownTime = 10; // Reset countdown time to 10 seconds

                countdownInterval = setInterval(() => {
                    countdownTime--;

                    // Update countdown timer in DOM
                    document.getElementById("countdown").textContent =
                        countdownTime;

                    // When countdown hits 0, open and close the tab, then restart countdown
                    if (countdownTime === 0) {
                        hitUrlAndOpenTab(url);
                        countdownTime = 10; // Reset countdown
                    }
                }, 1000); // Countdown updates every second
            }

            // Function to open the URL in a new tab, hold for 10 seconds, then close it
            function hitUrlAndOpenTab(url) {
                const newTab = window.open(url, "_blank");

                // Check if the pop-up was blocked
                if (newTab) {
                    // If the tab successfully opens
                    hitCount += 1; // Increment hit count
                    document.getElementById("hit-count").textContent = hitCount;

                    console.log(`Opened URL: ${url}, Hit Count: ${hitCount}`);

                    // Close the tab after 10 seconds
                    setTimeout(() => {
                        newTab.close();
                        console.log(`Closed URL: ${url}`);
                    }, 10000); // 10 seconds
                } else {
                    // Pop-up was blocked
                    alert(
                        "Pop-up was blocked! Please allow pop-ups for this site."
                    );
                }

                // Wait for 5 seconds after closing the tab before the next hit
                setTimeout(() => {
                    if (currentUrl === url) {
                        startCountdown(url); // Restart countdown for the next hit
                    }
                }, 5000); // 5-second wait before next hit
            }

            // Handle form submission to start hitting the URL
            const form = document.getElementById("url-form");
            const toggleButton = document.getElementById("toggle-button");

            form.addEventListener("submit", function (e) {
                e.preventDefault();

                // Get the URL from the input field
                currentUrl = document.getElementById("url-input").value;

                if (isIncreasing) {
                    // If already increasing, stop the process
                    stopIncreasingViews();
                } else {
                    // Start increasing views
                    console.log(
                        `Starting to hit URL: ${currentUrl} every 10 seconds...`
                    );
                    startCountdown(currentUrl);
                    toggleButton.textContent = "Stop Increasing Views"; // Change button text
                }
                isIncreasing = !isIncreasing; // Toggle the state
            });

            function stopIncreasingViews() {
                clearInterval(countdownInterval); // Stop the countdown
                countdownTime = 10; // Reset countdown time to 10 seconds
                document.getElementById("countdown").textContent =
                    countdownTime; // Reset countdown display
                toggleButton.textContent = "Start Increasing Views"; // Change button text back
                isIncreasing = false; // Update the state
                currentUrl = null; // Clear current URL
                hitCount = 0; // Reset hit count
                document.getElementById("hit-count").textContent = hitCount; // Reset hit count display
                console.log("Stopped increasing views.");
            }
        </script>
    </body>
</html>
